{"version":3,"file":"speakinggapfill.min.js","sources":["../src/speakinggapfill.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'qtype_minispeak/definitions',\n    'qtype_minispeak/pollyhelper',\n    'qtype_minispeak/cloudpoodllloader',\n    'qtype_minispeak/ttrecorder',\n    'qtype_minispeak/animatecss',\n    'qtype_minispeak/progresstimer'\n], function($, log, ajax, def, polly, cloudpoodll, ttrecorder, anim, progresstimer) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('minispeak speaking gap fill: initialising');\n\n    return {\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(index, itemdata, quizhelper) {\n            var self = this;\n            var theCallback = function(message) {\n\n                switch (message.type) {\n                    case 'recording':\n                        break;\n\n                    case 'speech':\n                        log.debug(\"Speech at speaking gap fill\");\n                        var words = self.items[self.game.pointer].words;\n                        var maskedwords = [];\n\n                        Object.keys(words).forEach(function(key) {\n                            maskedwords.push(words[key]);\n                        });\n\n                        console.log(maskedwords.join(\" \"));\n                        console.log(message.capturedspeech);\n\n                        self.getComparison(\n                            maskedwords.join(\" \"),\n                            message.capturedspeech,\n                            self.items[self.game.pointer].phonetic,\n                            function(comparison) {\n                                self.gotComparison(comparison, message);\n                            }\n                        );\n                        break;\n\n                }\n\n            };\n\n            if (quizhelper.use_ttrecorder()) {\n                var opts = {};\n                opts.uniqueid = itemdata.uniqueid;\n                opts.callback = theCallback;\n                opts.stt_guided = quizhelper.is_stt_guided();\n                opts.wwwroot = quizhelper.is_stt_guided();\n                ttrecorder.clone().init(opts);\n            } else {\n                // Init cloudpoodll push recorder\n                cloudpoodll.init('minispeak-recorder-listenrepeat-' + itemdata.id, theCallback);\n            }\n\n            self.itemdata = itemdata;\n            log.debug(\"itemdata\");\n            log.debug(itemdata);\n            self.quizhelper = quizhelper;\n            self.index = index;\n\n            // Anim\n            var animopts = {};\n            animopts.useanimatecss = quizhelper.useanimatecss;\n            anim.init(animopts);\n\n            self.register_events();\n            self.setvoice();\n            self.getItems();\n        },\n\n        next_question: function(percent) {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.totalitems = self.items.length;\n            stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n            stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n            self.quizhelper.do_next(stepdata);\n        },\n\n        register_events: function() {\n\n            var self = this;\n            // On next button click\n            $(\"#\" + self.itemdata.uniqueid + \"_container .minispeak_nextbutton\").on('click', function(e) {\n                self.next_question();\n            });\n            // On start button click\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_start_btn\").on(\"click\", function() {\n                self.start();\n            });\n\n            //AUDIO PLAYER Button events\n            var audioplayerbtn=$(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_btn\");\n            // On listen button click\n            if(self.itemdata.readsentence) {\n                audioplayerbtn.on(\"click\", function () {\n                    var theaudio = self.items[self.game.pointer].audio;\n\n                    //if we are already playing stop playing\n                    if(!theaudio.paused){\n                        theaudio.pause();\n                        theaudio.currentTime=0;\n                        $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                        $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                        return;\n                    }\n\n                    //change icon to indicate playing state\n                    theaudio.addEventListener('ended', function () {\n                        $(audioplayerbtn).children('.fa').removeClass('fa-stop');\n                        $(audioplayerbtn).children('.fa').addClass('fa-volume-up');\n                    });\n\n                    theaudio.addEventListener('play', function () {\n                        $(audioplayerbtn).children('.fa').removeClass('fa-volume-up');\n                        $(audioplayerbtn).children('.fa').addClass('fa-stop');\n                    });\n                    theaudio.load();\n                    theaudio.play();\n                });\n            }\n\n            // On skip button click\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_skip_btn\").on(\"click\", function() {\n                // Disable the buttons\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", true);\n                // Reveal the prompt\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_speech.sgapfill_teacher_left\").text(self.items[self.game.pointer].prompt + \"\");\n                // Reveal the answer\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_targetWord\").each(function() {\n                    var realidx = $(this).data(\"realidx\");\n                    var sgapfill_targetWord = self.items[self.game.pointer].sgapfill_targetWords[realidx];\n                    $(this).val(sgapfill_targetWord);\n                });\n\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                if (self.game.pointer < self.items.length - 1) {\n                    // Move on after short time to next prompt\n                    setTimeout(function() {\n                        $(\".sgapfill_reply_\" + self.game.pointer).hide();\n                        self.items[self.game.pointer].answered = true;\n                        self.items[self.game.pointer].correct = false;\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                    // End question\n                } else {\n                    self.end();\n                }\n\n            });\n\n        },\n\n        game: {\n            pointer: 0\n        },\n\n        usevoice: '',\n\n        setvoice: function() {\n            var self = this;\n            self.usevoice = self.itemdata.usevoice;\n            self.voiceoption = self.itemdata.voiceoption;\n            return;\n        },\n\n        getItems: function() {\n            var self = this;\n            var text_items = self.itemdata.sentences;\n\n            self.items = text_items.map(function(target) {\n                return {\n                    target: target.sentence,\n                    prompt: target.prompt,\n                    parsedstring: target.parsedstring,\n                    displayprompt: target.displayprompt,\n                    definition: target.definition,\n                    phonetic: target.phonetic,\n                    words: target.words,\n                    typed: \"\",\n                    timer: [],\n                    answered: false,\n                    correct: false,\n                    audio: null\n                };\n            }).filter(function(e) {\n                return e.target !== \"\";\n            });\n\n            $.each(self.items, function(index, item) {\n                polly.fetch_polly_url(item.prompt, self.voiceoption, self.usevoice).then(function(audiourl) {\n                    item.audio = new Audio();\n                    item.audio.src = audiourl;\n                    if (self.items.filter(function(e) {\n                        return e.audio === null;\n                    }).length === 0) {\n                        self.appReady();\n                    }\n                });\n            });\n\n\n        },\n\n        appReady: function() {\n            var self = this;\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_not_loaded\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_loaded\").show();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_start_btn\").prop(\"disabled\", false);\n        },\n\n        gotComparison: function(comparison, typed) {\n            var self = this;\n            var feedback = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + \" .dictate_feedback[data-idx='\" + self.game.pointer + \"']\");\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_targetWord\").removeClass(\"sgapfill_correct sgapfill_incorrect\");\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_feedback\").removeClass(\"fa fa-check fa-times\");\n\n            var allCorrect = comparison.filter(function(e) {\n                return !e.matched;\n            }).length == 0;\n\n            if (allCorrect && comparison && comparison.length > 0) {\n                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                    var characterinput = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                    if (data.type === 'input') {\n                        characterinput.val(data.character);\n                    }\n                });\n\n                feedback.removeClass(\"fa fa-times\");\n                feedback.addClass(\"fa fa-check\");\n\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = true;\n                self.items[self.game.pointer].typed = typed;\n\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", true);\n\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                if (self.game.pointer < self.items.length - 1) {\n                    setTimeout(function() {\n                        $(\".sgapfill_reply_\" + self.game.pointer).hide();\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                } else {\n                    self.end();\n                }\n            } else {\n                feedback.removeClass(\"fa fa-check\");\n                feedback.addClass(\"fa fa-times\");\n                // Mark up the words as correct or not\n                comparison.forEach(function(obj) {\n                    var words = self.items[self.game.pointer].words;\n\n                    Object.keys(words).forEach(function(key) {\n                        if (words[key] == obj.word) {\n                            if (!obj.matched) {\n                                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                                    var characterinput = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                                    if (data.index == key && data.type === 'input') {\n                                        characterinput.val('');\n                                    }\n                                });\n                            } else {\n                                self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                                    var characterinput = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]');\n                                    if (data.index == key && data.type === 'input') {\n                                        characterinput.val(data.character);\n                                    }\n                                });\n                            }\n                        }\n                    });\n                });\n                var thereply = $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_reply_\" + self.game.pointer);\n                anim.do_animate(thereply, 'shakeX animate__faster').then(\n                    function() {\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", false);\n                    }\n                );\n            }\n            // Show all the correct words\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_targetWord.sgapfill_correct\").each(function() {\n                var realidx = $(this).data(\"realidx\");\n                var sgapfill_targetWord = self.items[self.game.pointer].sgapfill_targetWords[realidx];\n                $(this).val(sgapfill_targetWord);\n            });\n\n            //if they cant retry OR the time limit is up, move on\n            var timelimit_progressbar = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container .progress-bar\");\n            if(!self.itemdata.allowretry || timelimit_progressbar.hasClass('progress-bar-complete')){\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n                self.items[self.game.pointer].typed = typed;\n\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", true);\n\n                self.stopTimer(self.items[self.game.pointer].timer);\n\n                if (self.game.pointer < self.items.length - 1) {\n                    setTimeout(function() {\n                        $(\".sgapfill_reply_\" + self.game.pointer).hide();\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                } else {\n                    self.end();\n                }\n            }\n\n        },\n\n        getComparison: function(passage, transcript, phonetic, callback) {\n            var self = this;\n\n            $(\".sgapfill_ctrl-btn\").prop(\"disabled\", true);\n            self.quizhelper.comparePassageToTranscript(passage, transcript, phonetic, self.itemdata.language).then(function(ajaxresult) {\n                var payloadobject = JSON.parse(ajaxresult);\n                if (payloadobject) {\n                    callback(payloadobject);\n                } else {\n                    callback(false);\n                }\n            });\n        },\n\n        end: function() {\n            var self = this;\n            $(\".minispeak_nextbutton\").prop(\"disabled\", true);\n            setTimeout(function() {\n\n                $(\".minispeak_nextbutton\").prop(\"disabled\", false);\n                self.next_question();\n\n            }, 2000);\n\n        },\n\n        start: function() {\n            var self = this;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", true);\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_speakbtncontainer\").show();\n\n            self.items.forEach(function(item) {\n                item.spoken = \"\";\n                item.answered = false;\n                item.correct = false;\n            });\n\n            self.game.pointer = 0;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").show();\n            if(self.itemdata.readsentence) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_cont\").show();\n            }\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_start_btn\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_mainmenu\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_controls\").show();\n\n            self.nextPrompt();\n        },\n\n        nextPrompt: function() {\n            var self = this;\n\n            $(\".sgapfill_ctrl-btn\").prop(\"disabled\", false);\n\n            var color;\n\n            var progress = self.items.map(function(item, idx) {\n                color = \"gray\";\n                if (self.items[idx].answered && self.items[idx].correct) {\n                    color = \"green\";\n                } else if (self.items[idx].answered && !self.items[idx].correct) {\n                    color = \"red\";\n                }\n                return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n            }).join(\" \");\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_title\").html(progress);\n            var newprompt = $(\".sgapfill_prompt_\" + self.game.pointer);\n            anim.do_animate(newprompt, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n            self.nextReply();\n\n        },\n\n        nextReply: function() {\n            var self = this;\n\n            var code = \"<div class='sgapfill_reply sgapfill_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n\n            code += \"<div class='form-container'>\";\n            self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                if (data.type === 'input') {\n                    code += \"<input class='single-character' autocomplete='off' type='text' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"' readonly>\";\n                } else if (data.type === 'mtext') {\n                    code += \"<input class='single-character-mtext' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n                } else {\n                    code += data.character;\n                }\n            });\n            code += \" <i data-idx='\" + self.game.pointer + \"' class='dictate_feedback'></i></div>\";\n\n            code += \"<div class='definition-container'>\";\n            code += \"<div class='definition'>\" + self.items[self.game.pointer].definition + \"</div>\";\n            code += \"</div>\";\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").append(code);\n            var newreply = $(\".sgapfill_reply_\" + self.game.pointer);\n            anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n            $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_ctrl-btn\").prop(\"disabled\", false);\n\n            if (self.itemdata.timelimit > 0) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\").show();\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container i\").show();\n                var progresbar = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container #progresstimer\").progressTimer({\n                    height: '5px',\n                    timeLimit: self.itemdata.timelimit,\n                    onFinish: function() {\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_skip_btn\").trigger('click');\n                    }\n                });\n\n                progresbar.each(function() {\n                    self.items[self.game.pointer].timer.push($(this).attr('timer'));\n                });\n            }\n\n            if (!self.quizhelper.mobile_user()) {\n                setTimeout(function() {\n                    $(\"#\" + self.itemdata.uniqueid + \"_container .sgapfill_listen_btn\").trigger('click');\n                }, 1000);\n            }\n        },\n\n        stopTimer: function(timers) {\n            if (timers.length) {\n                timers.forEach(function(timer) {\n                    clearInterval(timer);\n                });\n            }\n        },\n    };\n});"],"names":["define","$","log","ajax","def","polly","cloudpoodll","ttrecorder","anim","progresstimer","debug","clone","extend","this","init","index","itemdata","quizhelper","self","theCallback","message","type","words","items","game","pointer","maskedwords","Object","keys","forEach","key","push","console","join","capturedspeech","getComparison","phonetic","comparison","gotComparison","use_ttrecorder","opts","uniqueid","callback","stt_guided","is_stt_guided","wwwroot","id","animopts","useanimatecss","register_events","setvoice","getItems","next_question","percent","stepdata","hasgrade","totalitems","length","correctitems","filter","e","correct","grade","Math","round","do_next","on","start","audioplayerbtn","readsentence","theaudio","audio","paused","pause","currentTime","children","removeClass","addClass","addEventListener","load","play","prop","text","prompt","each","realidx","data","sgapfill_targetWord","sgapfill_targetWords","val","stopTimer","timer","setTimeout","hide","answered","nextPrompt","end","usevoice","voiceoption","text_items","sentences","map","target","sentence","parsedstring","displayprompt","definition","typed","item","fetch_polly_url","then","audiourl","Audio","src","appReady","show","feedback","matched","characterinput","character","obj","word","thereply","do_animate","timelimit_progressbar","allowretry","hasClass","passage","transcript","comparePassageToTranscript","language","ajaxresult","payloadobject","JSON","parse","spoken","color","progress","idx","html","newprompt","nextReply","code","append","newreply","timelimit","progressTimer","height","timeLimit","onFinish","trigger","attr","mobile_user","timers","clearInterval"],"mappings":"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"}