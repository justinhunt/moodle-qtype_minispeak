define("qtype_minispeak/itemtypechooser",["exports","core/str","core/prefetch"],(function(_exports,_str,_prefetch){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;
/**
   * Mini Speak Type Choose
   *
   * @module     qtype_minispeak/typechooser
   * @copyright  2023 Justin Hunt <justin@poodll.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * @since      4.0
   */
const Selectors_fields={selector:'[data-itemtypechooser-field="selector"]',updateButton:'[data-itemtypechooser-field="updateButton"]',typeInstructions:'[data-itemtypechooser-field="typeInstructions"]'};_exports.init=()=>{(0,_prefetch.prefetchStrings)("qtype_minispeak",["multiaudio_instructions1","multichoice_instructions1","shortaudio_instructions1","smartframe_instructions1","listenrepeat_instructions1","dictation_instructions1","dictationchat_instructions1","speakinggapfill_instructions1","typinggapfill_instructions1","listeninggapfill_instructions1","comprehensionquiz_instructions1","buttonquiz_instructions1","page_instructions1"]),document.querySelector(Selectors_fields.selector).addEventListener("change",(e=>{const form=e.target.closest("form"),updateButton=form.querySelector(Selectors_fields.updateButton),typeInstructions=form.querySelector(Selectors_fields.typeInstructions),fieldset=updateButton.closest("fieldset"),url=new URL(form.action);url.hash=fieldset.id,form.action=url.toString(),(0,_str.get_string)(e.target.value+"_instructions1","qtype_minispeak").then((function(theinstructions){typeInstructions.value=theinstructions,updateButton.click()}))}))}}));

//# sourceMappingURL=itemtypechooser.min.js.map