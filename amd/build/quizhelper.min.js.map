{"version":3,"sources":["../src/quizhelper.js"],"names":["define","$","log","def","templates","Ajax","dictation","dictationchat","multichoice","multiaudio","speechcards","listenrepeat","page","smartframe","shortanswer","listeninggapfill","typinggapfill","speakinggapfill","debug","spliton_regexp","RegExp","nopunc_regexp","nonspaces_regexp","autoplaydelay","controls","submitbuttonclass","stepresults","payloadJson","init","quizcontainer","activitydata","cmid","attemptid","polly","quizdata","region","ttslanguage","courseurl","reattempturl","activityurl","backtocourse","stt_guided","wwwroot","useanimatecss","questioninstances","payloadfield","attr","qubaid","sequencecheck","replace","status","hassubitems","card","uniqueid","find","name","selector","parent","hasOwnProperty","op","identifiers","callback","dd","split","forEach","identifier","show","instance","hide","hideAll","text","get","prepare_html","init_questions","register_events","start_quiz","quizfinished","updateSummaryCard","payload","val","trim","payloadArr","payloadEncData","atob","JSON","parse","hasgrade","correctitems","totalitems","locked","e","each","index","item","questioninstance","type","qtype_dictation","clone","qtype_dictationchat","qtype_multichoice","qtype_multiaudio","qtype_speechcards","qtype_listenrepeat","qtype_page","qtype_smartframe","qtype_shortanswer","qtype_listeninggapfill","qtype_typinggapfill","qtype_speakinggapfill","push","that","fetch_polly_url","data","then","audiourl","on","retrybutton","preventDefault","report_step_grade","token","reloadcallback","location","reload","require","changechecker","resetFormDirtyState","M","core_formchangechecker","reset_form_dirty_state","render_quiz_progress","current","total","array","i","slice","linestyles","length","html","do_next","stepdata","showSummary","currentquizdataindex","currentitem","preview","singlemode","theoldquestion","nextitem","ttsquestionplayer","setTimeout","play","prop","window","href","remove","store","ret","call","methodname","args","step","btoa","stringify","async","response","newsequence","onSubmit","alert","mobile_user","test","navigator","userAgent","chrome_user","use_ttrecorder","is_stt_guided","similarity","s1","s2","longer","shorter","longerLength","editDistance","parseFloat","toLowerCase","costs","lastValue","j","newValue","charAt","Math","min","cleanText","lowertext","punctuationless","checkByPhonetic","passage","transcript","passagephonetic","language","comparePassageToTranscript","alternatives","phonetic"],"mappings":"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","sourcesContent":["define(['jquery', 'core/log', 'qtype_minispeak/definitions', 'core/templates', 'core/ajax',\n    'qtype_minispeak/dictation', 'qtype_minispeak/dictationchat', 'qtype_minispeak/multichoice','qtype_minispeak/multiaudio',\n        'qtype_minispeak/speechcards', 'qtype_minispeak/listenrepeat',\n        'qtype_minispeak/page','qtype_minispeak/smartframe','qtype_minispeak/shortanswer',\n        'qtype_minispeak/listeninggapfill','qtype_minispeak/typinggapfill','qtype_minispeak/speakinggapfill'],\n  function($, log, def, templates, Ajax, dictation, dictationchat, multichoice, multiaudio,\n           speechcards, listenrepeat, page, smartframe, shortanswer,\n           listeninggapfill,typinggapfill, speakinggapfill) {\n    \"use strict\"; // jshint ;_;\n\n    /*\n    This file is to manage the quiz stage\n     */\n\n    log.debug('minispeak Quiz helper: initialising');\n\n    return {\n\n      //original spliton_regexp: new RegExp(/([,.!?:;\" ])/, 'g'),\n      spliton_regexp: new RegExp(/([!\"# ¡¿$%&'()。「」、*+,-.\\/:;<=>?@[\\]^_`{|}~])/, 'g'),\n      //nopunc is diff to split on because it does not match on spaces\n      nopunc_regexp: new RegExp(/[!\"#¡¿$%&'()。「」、*+,-.\\/:;<=>?@[\\]^_`{|}~]/,'g'),\n      nonspaces_regexp: new RegExp(/[^ ]/,'g'),\n      autoplaydelay: 800,\n\n      controls: {},\n      submitbuttonclass: 'qtype_minispeak_quizsubmitbutton',\n      stepresults: [],\n      payloadJson: {},\n\n      init: function(quizcontainer, activitydata, cmid, attemptid,polly) {\n        this.quizdata = activitydata.quizdata;\n        this.region = activitydata.region;\n        this.ttslanguage = activitydata.ttslanguage;\n        this.controls.quizcontainer = quizcontainer;\n        this.attemptid = attemptid;\n        this.courseurl = activitydata.courseurl;\n        this.cmid = cmid;\n        this.reattempturl = activitydata.reattempturl;\n        this.activityurl = activitydata.activityurl;\n        this.backtocourse = activitydata.backtocourse;\n        this.stt_guided = activitydata.stt_guided;\n        this.wwwroot = activitydata.wwwroot;\n        this.useanimatecss  = activitydata.useanimatecss;\n        this.questioninstances = [];\n        this.controls.payloadfield = $('#' + this.quizdata[0].payloadfield);\n        this.controls.payloadfield.attr('data-qubaid', this.quizdata[0].qubaid);\n        this.controls.sequencecheck = $('input[name=\"' + this.controls.payloadfield.attr('name').replace('payload', ':sequencecheck') + '\"]');\n        this.controls.status = {\n          hassubitems: this.quizdata[0].hassubitems,\n          card: $(`#${this.quizdata[0].uniqueid}_statuscard`),\n          find: function(name, selector, parent = null) {\n            if (parent && this.hasOwnProperty(parent)) {\n              this[name] = this[parent].find(selector);\n            } else {\n              this[name] = this.card.find(selector);\n            }\n            return this;\n          },\n          op: function(identifiers, callback) {\n            var dd = this;\n            var identifiers = identifiers.split(',');\n            identifiers.forEach(function(identifier) {\n              if (dd.hasOwnProperty(identifier)) {\n                callback(dd[identifier]);\n              }\n            });\n            return dd;\n          },\n          show: function(identifiers) {\n            return this.op(identifiers, function(instance) {\n              instance.attr('data-display', 'show');\n            });\n          },\n          hide: function(identifiers) {\n            return this.op(identifiers, function(instance) {\n              instance.attr('data-display', 'hide');\n            });\n          },\n          hideAll: function() {\n            return this.hide('card,nonattempt,result,summary');\n          },\n          text: function(identifier, text) {\n            if (this.hasOwnProperty(identifier)) {\n              this[identifier].text(text);\n            }\n            return this;\n          },\n          get: function(identifier) {\n            if (this.hasOwnProperty(identifier)) {\n              return this[identifier];\n            }\n          }\n        };\n        this.controls.status.find('result', '.qtype_minispeak_statustext');\n        this.controls.status.find('summary', '[data-region=\"summary\"]', 'result');\n        this.controls.status.find('completed', '[data-region=\"completedcount\"]', 'summary');\n        this.controls.status.find('total', '[data-region=\"totalcount\"]', 'summary');\n        this.controls.status.find('nonattempt', '.qtype_minispeak_statustext_nonattempt');\n        this.controls.status.find('retrybutton', '.qtype_minispeak_retrybutton');\n\n        this.prepare_html();\n        this.init_questions(this.quizdata,polly);\n        this.register_events();\n        this.start_quiz();\n      },\n\n      prepare_html: function() {\n\n        // this.controls.quizcontainer.append(submitbutton);\n        this.controls.quizfinished=$(\"#qtype_minispeak_quiz_finished\");\n        this.updateSummaryCard();\n\n      },\n\n      updateSummaryCard: function() {\n        var payload = this.controls.payloadfield.val();\n        if (payload && payload.trim() !== '') {\n          var payloadArr = payload.split('.');\n          try {\n            var payloadEncData = atob(payloadArr[1]);\n            payloadEncData = payloadEncData.replace(/\"/g,'').replace(/'/g,'');\n            payloadEncData = atob(payloadEncData);\n            this.payloadJson = JSON.parse(payloadEncData);\n            if (this.payloadJson.hasgrade) {\n              this.controls.status.show('card,result');\n              if (this.controls.status.hassubitems) {\n                this.controls.status\n                  .text('completed', this.payloadJson.correctitems)\n                  .text('total', this.payloadJson.totalitems)\n                  .show('summary');\n              }\n            } else if (this.quizdata[0].locked) {\n              this.controls.status.show('card,nonattempt');\n            } else {\n              this.controls.status.hideAll();\n            }\n          } catch (e) {\n            log.debug(e);\n          }\n        } else if (this.quizdata[0].locked) {\n            this.controls.status.show('card,nonattempt');\n        } else {\n            this.controls.status.hideAll();\n        }\n      },\n\n      init_questions: function(quizdata, polly) {\n        var dd = this;\n        $.each(quizdata, function(index, item) {\n          var questioninstance;\n          switch (item.type) {\n            case def.qtype_dictation:\n              questioninstance = dictation.clone();\n              break;\n            case def.qtype_dictationchat:\n              questioninstance = dictationchat.clone();\n              break;\n            case def.qtype_multichoice:\n              questioninstance = multichoice.clone();\n              break;\n            case def.qtype_multiaudio:\n                questioninstance = multiaudio.clone();\n                break;\n            case def.qtype_speechcards:\n              //speechcards init needs to occur when it is visible. lame.\n              // so we do that in do_next function, down below\n              questioninstance = speechcards.clone();\n              break;\n            case def.qtype_listenrepeat:\n              questioninstance = listenrepeat.clone();\n              break;\n\n             case def.qtype_page:\n                  questioninstance = page.clone();\n                  break;\n\n              case def.qtype_smartframe:\n                  questioninstance = smartframe.clone();\n                  break;\n\n              case def.qtype_shortanswer:\n                  questioninstance = shortanswer.clone();\n                  break;\n\n              case def.qtype_listeninggapfill:\n                  questioninstance = listeninggapfill.clone();\n                  break;\n\n              case def.qtype_typinggapfill:\n                  questioninstance = typinggapfill.clone();\n                  break;\n\n              case def.qtype_speakinggapfill:\n                  questioninstance = speakinggapfill.clone();\n                  break;\n          }\n\n          if (questioninstance) {\n            questioninstance.init(index, item, dd, polly);\n            dd.questioninstances.push(questioninstance);\n          }\n\n        });\n\n        //TTS in question headers\n          $(\"audio.qtype_minispeak_itemttsaudio\").each(function(){\n              var that=this;\n              polly.fetch_polly_url($(this).data('text'), $(this).data('ttsoption'), $(this).data('voice')).then(function(audiourl) {\n                  $(that).attr(\"src\", audiourl);\n              });\n          });\n\n      },\n\n      register_events: function() {\n        var dd = this;\n        $('.' + this.submitbuttonclass).on('click', function() {\n          //do something\n        });\n        var retrybutton = this.controls.status.get('retrybutton');\n        if (retrybutton) {\n          retrybutton.on('click', function(e) {\n            e.preventDefault();\n            /* dd.questioninstances.forEach(function(questioninstance) {\n              if (typeof questioninstance.start === 'function') {\n                questioninstance.start();\n              }\n            });\n            dd.controls.payloadfield.val('');\n            dd.updateSummaryCard();\n            if (dd.payloadJson?.hasgrade) {\n              dd.payloadJson = {};\n              dd.report_step_grade(dd.payloadJson);\n            } */\n            dd.report_step_grade({}, false, true).then(function(token) {\n              var reloadcallback = function() {\n                location.reload();\n              }\n              if (token) {\n                  try {\n                    require(['core_form/changechecker'], function(changechecker) {\n                      changechecker.resetFormDirtyState(retrybutton.get(0));\n                      reloadcallback();\n                    });\n                  } catch(e) {\n                    log.debug('old moodle found');\n                    if (M.core_formchangechecker !== undefined) {\n                      M.core_formchangechecker.reset_form_dirty_state();\n                    }\n                    reloadcallback();\n                  }\n              }\n            })\n          })\n        }\n      },\n      render_quiz_progress:function(current,total){\n        var array = [];\n        for(var i=0;i<total;i++){\n          array.push(i);\n        }\n\n        if(total<6) {\n            var slice = array.slice(0, 5);\n            var linestyles = \"width: \" + (100 - 100 / slice.length) + \"%; margin-left: auto; margin-right: auto\";\n            var html = \"<div class='minispeak_quiz_progress_line' style='\" + linestyles + \"'></div>\";\n\n            slice.forEach(function (i) {\n                html += \"<div class='minispeak_quiz_progress_item \" + (i === current ? 'minispeak_quiz_progress_item_current' : '') + \" \" + (i < current ? 'minispeak_quiz_progress_item_completed' : '') + \"'>\" + (i + 1) + \"</div>\";\n            });\n        }else {\n             if(current > total-6){\n                 var slice = array.slice(total-5, total-1);\n             }else{\n                 var slice = array.slice(current, current + 4);\n             }\n\n              //if first item is visible then no line trailing left of item 1\n              if(current==0){\n                  var linestyles = \"width: 80%; margin-left: auto; margin-right: auto\";\n              }else {\n                  var linestyles = \"width: \" + (100 - 100 / (2 *slice.length)) + \"%; margin-left: 0\";\n              }\n            var html = \"<div class='minispeak_quiz_progress_line' style='\" + linestyles + \"'></div>\";\n              slice.forEach(function (i) {\n                  html += \"<div class='minispeak_quiz_progress_item \" + (i === current ? 'minispeak_quiz_progress_item_current' : '') + \" \" + (i < current ? 'minispeak_quiz_progress_item_completed' : '') + \"'>\" + (i + 1) + \"</div>\";\n              });\n              //end marker\n            html += \"<div class='minispeak_quiz_progress_finalitem'>\" + (total) + \"</div>\";\n          }\n\n        html+=\"\";\n        $(\".minispeak_quiz_progress\").html(html);\n\n      },\n\n      do_next: function(stepdata, showSummary){\n        var dd = this;\n        //get current question\n        var currentquizdataindex =   stepdata.index;\n        var currentitem = this.quizdata[currentquizdataindex];\n\n        //in preview mode do no do_next\n        if(currentitem.preview===true){return;}\n\n        //post grade\n         // log.debug(\"reporting step grade\");\n        dd.report_step_grade(stepdata, showSummary);\n\n        //in single mode do no do_next\n        if(currentitem.singlemode===true){return;}\n\n         // log.debug(\"reported step grade\");\n        //hide current question\n        var theoldquestion = $(\"#\" + currentitem.uniqueid + \"_container\");\n        theoldquestion.hide();\n        //show next question or End Screen\n        if (dd.quizdata.length > currentquizdataindex+1) {\n          var nextindex = currentquizdataindex+ 1;\n          var nextitem = this.quizdata[nextindex];\n            //show the question\n            $(\"#\" + nextitem.uniqueid + \"_container\").show();\n          //any per question type init that needs to occur can go here\n          switch (nextitem.type) {\n              case def.qtype_speechcards:\n                  //speechcards.init(nextindex, nextitem, dd);\n                  break;\n              case def.qtype_dictation:\n              case def.qtype_dictationchat:\n              case def.qtype_multichoice:\n              case def.qtype_multiaudio:\n              case def.qtype_listenrepeat:\n              case def.qtype_smartframe:\n              case def.qtype_shortanswer:\n              default:\n          }//end of nextitem switch\n\n            //autoplay audio if we need to\n            var ttsquestionplayer = $(\"#\" + nextitem.uniqueid + \"_container audio.qtype_minispeak_itemttsaudio\");\n            if(ttsquestionplayer.data('autoplay')==\"1\"){\n                var that=this;\n                setTimeout(function() {ttsquestionplayer[0].play();}, that.autoplaydelay);\n            }\n\n        } else {\n          //just reload and re-fetch all the data to display\n            $(\".minispeak_nextbutton\").prop(\"disabled\", true);\n            setTimeout(function () {\n               // log.debug(\"forwarding to finished page\");\n                window.location.href=dd.activityurl;\n            }, 1000);\n\n          return;\n\n          //no longer do this\n            /*\n          var results = dd.stepresults.filter(function(e){return e.hasgrade;});\n          var correctitems = 0;\n          var totalitems = 0;\n          results.forEach(function(result,i){\n            result.index=i+1;\n            result.title=dd.quizdata[i].title;\n            correctitems += result.correctitems;\n            totalitems += result.totalitems;\n          });\n          var totalpercent = Math.round((correctitems/totalitems)*100);\n          console.log(results,correctitems,totalitems,totalpercent);\n          var finishedparams ={results:results,total:totalpercent, courseurl: this.courseurl};\n          if(this.reattempturl!=''){finishedparams.reattempturl = this.reattempturl;}\n          if(this.backtocourse!=''){finishedparams.backtocourse = true;}\n          templates.render('qtype_minispeak/quizfinished',finishedparams).then(\n              function(html,js){\n                  dd.controls.quizfinished.html(html);\n                  dd.controls.quizfinished.show();\n                  templates.runTemplateJS(js);\n              }\n          );\n          */\n\n        }//end of if has more questions\n\n        this.render_quiz_progress(stepdata.index+1,this.quizdata.length);\n\n          //we want to destroy the old question in the DOM also because iframe/media content might be playing\n          theoldquestion.remove();\n\n      },\n\n      report_step_grade: function(stepdata, showSummary, store = true) {\n        var dd = this;\n\n        //store results locally\n        this.stepresults.push(stepdata);\n\n        //push results to server\n        var ret = Ajax.call([{\n          methodname: 'qtype_minispeak_report_step_grade',\n          args: {\n            cmid: dd.cmid,\n            qubaid: dd.quizdata[0].qubaid,\n            step: btoa(JSON.stringify(stepdata)),\n            store: Boolean(store)\n          },\n          async: false\n        }])[0].then(function(response) {\n          if (response.newsequence) {\n            dd.controls.sequencecheck.val(response.newsequence);\n          }\n          if (response.token) {\n            dd.controls.payloadfield.val(response.token);\n            if (showSummary) {\n              dd.updateSummaryCard();\n            }\n            return response.token;\n          }\n        });\n        log.debug(\"report_step_grade success: \" + ret);\n        return ret;\n      },\n\n\n\n      start_quiz: function() {\n        $(\"#\" + this.quizdata[0].uniqueid + \"_container\").show();\n          //autoplay audio if we need to\n          var ttsquestionplayer = $(\"#\" + this.quizdata[0].uniqueid + \"_container audio.qtype_minispeak_itemttsaudio\");\n          if(ttsquestionplayer.data('autoplay')==\"1\"){\n              var that=this;\n              setTimeout(function() {ttsquestionplayer[0].play();}, that.autoplaydelay);\n          }\n        this.render_quiz_progress(0,this.quizdata.length);\n      },\n\n      //this function is overridden by the calling class\n      onSubmit: function() {\n        alert('quiz submitted. Override this');\n      },\n\n        mobile_user: function() {\n\n            if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n                return true;\n            } else {\n                return false;\n            }\n        },\n\n        chrome_user: function(){\n            if(/Chrome/i.test(navigator.userAgent)) {\n                return true;\n            }else{\n                return false;\n            }\n        },\n\n        //this will always be true these days\n        use_ttrecorder: function(){\n            return true;\n        },\n        is_stt_guided: function(){\n          return this.stt_guided;\n        },\n\n        //text comparison functions follow===============\n\n        similarity: function(s1, s2) {\n            //we remove spaces because JP transcript and passage might be different. And who cares about spaces anyway?\n            s1 = s1.replace(/\\s+/g, '');\n            s2 = s2.replace(/\\s+/g, '');\n\n            var longer = s1;\n            var shorter = s2;\n            if (s1.length < s2.length) {\n                longer = s2;\n                shorter = s1;\n            }\n            var longerLength = longer.length;\n            if (longerLength === 0) {\n                return 100;\n            }\n            return 100 * ((longerLength - this.editDistance(longer, shorter)) / parseFloat(longerLength));\n        },\n        editDistance: function(s1, s2) {\n            s1 = s1.toLowerCase();\n            s2 = s2.toLowerCase();\n\n            var costs = [];\n            for (var i = 0; i <= s1.length; i++) {\n                var lastValue = i;\n                for (var j = 0; j <= s2.length; j++) {\n                    if (i === 0)\n                        costs[j] = j;\n                    else {\n                        if (j > 0) {\n                            var newValue = costs[j - 1];\n                            if (s1.charAt(i - 1) !== s2.charAt(j - 1))\n                                newValue = Math.min(Math.min(newValue, lastValue),\n                                    costs[j]) + 1;\n                            costs[j - 1] = lastValue;\n                            lastValue = newValue;\n                        }\n                    }\n                }\n                if (i > 0)\n                    costs[s2.length] = lastValue;\n            }\n            return costs[s2.length];\n        },\n\n        cleanText: function(text) {\n            var lowertext = text.toLowerCase();\n            var punctuationless = lowertext.replace(this.nopunc_regexp,\"\");\n            var ret = punctuationless.replace(/\\s+/g, \" \").trim();\n            return ret;\n        },\n\n        //this will return the promise, the result of which is an integer 100 being perfect match, 0 being no match\n        checkByPhonetic: function(passage, transcript, passagephonetic, language) {\n            return Ajax.call([{\n                methodname: 'qtype_minispeak_check_by_phonetic',\n                args: {\n                    'spoken': transcript,\n                    'correct': passage,\n                    'language': language,\n                    'phonetic': passagephonetic,\n                    'region': this.region,\n                    'cmid': this.cmid\n                },\n                async: false\n            }])[0];\n\n        },\n\n       comparePassageToTranscript: function (passage,transcript,passagephonetic, language){\n          return Ajax.call([{\n               methodname: 'qtype_minispeak_compare_passage_to_transcript',\n               args: {\n                   passage: passage,\n                   transcript: transcript,\n                   alternatives: '',\n                   phonetic: passagephonetic,\n                   language: language,\n                   region: this.region,\n                   cmid: this.cmid\n               },\n              async: false\n           }])[0];\n       }\n    }; //end of return value\n  });\n"],"file":"quizhelper.min.js"}