{"version":3,"file":"typinggapfill.min.js","sources":["../src/typinggapfill.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'core/ajax',\n    'qtype_minispeak/definitions',\n    'qtype_minispeak/animatecss',\n    'qtype_minispeak/progresstimer',\n], function($, log, ajax, def, anim, progresstimer) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('minispeak typing gap fill: initialising');\n\n    return {\n\n        answers: {},\n\n        // For making multiple instances\n        clone: function() {\n            return $.extend(true, {}, this);\n        },\n\n        init: function(index, itemdata, quizhelper) {\n            var self = this;\n            self.itemdata = itemdata;\n            self.quizhelper = quizhelper;\n            self.index = index;\n\n            var animopts = {};\n            animopts.useanimatecss = quizhelper.useanimatecss;\n            anim.init(animopts);\n\n            self.register_events();\n            self.getItems();\n            self.appReady();\n        },\n\n        next_question: function(showSummary) {\n            var self = this;\n            var stepdata = {};\n            stepdata.index = self.index;\n            stepdata.hasgrade = true;\n            stepdata.totalitems = self.items.length;\n            stepdata.correctitems = self.items.filter(function(e) {\n                return e.correct;\n            }).length;\n            stepdata.grade = Math.round((stepdata.correctitems / stepdata.totalitems) * 100);\n            stepdata.answers = self.answers;\n            self.quizhelper.do_next(stepdata, showSummary);\n        },\n\n        register_events: function() {\n\n            var self = this;\n\n            // Next page button.\n            $(\"#\" + self.itemdata.uniqueid + \"_container .minispeak_nextbutton\").on('click', function(e) {\n                self.next_question();\n            });\n\n            // Start button.\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_start_btn\").on(\"click\", function() {\n                self.start();\n            });\n\n            // Skip.\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_skip_btn\").on(\"click\", function() {\n                $(this).prop(\"disabled\", true);\n                $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_check_btn\").prop(\"disabled\", true);\n                self.stopTimer(self.items[self.game.pointer].timer);\n                // Move on after short time, to next prompt, or next question.\n                if (self.game.pointer < self.items.length - 1) {\n                    setTimeout(function() {\n                        $(\".tgapfill_reply_\" + self.game.pointer).hide();\n                        self.items[self.game.pointer].answered = true;\n                        self.items[self.game.pointer].correct = false;\n                        self.game.pointer++;\n                        self.nextPrompt();\n                    }, 2000);\n                } else {\n                    self.end();\n                }\n            });\n\n            // Check.\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_check_btn\").on(\"click\", function() {\n                self.check_answer();\n            });\n\n            // Listen for enter key on input boxes\n            $(\"#\" + self.itemdata.uniqueid + \"_container\").on(\"keydown\", \".single-character\", function(e) {\n                if (e.which == 13) {\n                    self.check_answer();\n                }\n            });\n        },\n\n        game: {\n            pointer: 0\n        },\n\n        check_answer: function() {\n            var self = this;\n            var passage = self.items[self.game.pointer].parsedstring;\n            var characterunputs = $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer + ' input.single-character');\n            var transcript = [];\n\n            characterunputs.each(function() {\n                var index = $(this).data('index');\n                var value = $(this).val();\n                transcript.push({\n                    index: index,\n                    value: value\n                });\n            });\n\n            self.getComparison(passage, transcript, function(comparison) {\n                self.gotComparison(comparison);\n            });\n        },\n\n        getItems: function() {\n            var self = this;\n            var text_items = self.itemdata.sentences;\n\n            self.items = text_items.map(function(target) {\n                return {\n                    target: target.sentence,\n                    prompt: target.prompt,\n                    parsedstring: target.parsedstring,\n                    definition: target.definition,\n                    timer: [],\n                    typed: \"\",\n                    answered: false,\n                    correct: false,\n                    audio: null\n                };\n            }).filter(function(e) {\n                return e.target !== \"\";\n            });\n        },\n\n        appReady: function() {\n            var self = this;\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_not_loaded\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_loaded\").show();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_start_btn\").prop(\"disabled\", false);\n        },\n\n        gotComparison: function(comparison) {\n            var self = this;\n            var timelimit_progressbar = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container .progress-bar\");\n            if (comparison) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer + \" .tgapfill_feedback[data-idx='\" + self.game.pointer + \"']\").addClass(\"fa fa-check\");\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = true;\n                self.items[self.game.pointer].typed = false;\n                //make the input boxes green and move forward\n                $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer + \" input\").addClass(\"ms_gapfill_char_correct\");\n\n            //if they cant retry OR the time limit is up, move on\n            } else if(!self.itemdata.allowretry || timelimit_progressbar.hasClass('progress-bar-complete')) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer + \" .tgapfill_feedback[data-idx='\" + self.game.pointer + \"']\").addClass(\"fa fa-times\");\n                self.items[self.game.pointer].answered = true;\n                self.items[self.game.pointer].correct = false;\n                self.items[self.game.pointer].typed = false;\n            } else {\n                //it was wrong but they can retry\n                var thereply = $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer);\n                anim.do_animate(thereply, 'shakeX animate__faster').then(\n                    function() {\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_ctrl-btn\").prop(\"disabled\", false);\n                    }\n                );\n                return;\n            }\n\n            self.stopTimer(self.items[self.game.pointer].timer);\n\n            if (self.game.pointer < self.items.length - 1) {\n                setTimeout(function() {\n                    $(\".tgapfill_reply_\" + self.game.pointer).hide();\n                    self.game.pointer++;\n                    self.nextPrompt();\n                }, 2000);\n            } else {\n                self.end();\n            }\n        },\n\n        getComparison: function(passage, transcript, callback) {\n            var self = this;\n\n            $(\".tgapfill_ctrl-btn\").prop(\"disabled\", true);\n\n            var correctanswer = true;\n\n            passage.forEach(function(data, index) {\n                var char = '';\n\n                if (data.type === 'input') {\n                    if (correctanswer === true) {\n                        char = $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer + ' input.single-character[data-index=\"' + index + '\"]').val();\n                        if (char == '') {\n                            correctanswer = false;\n                        } else if (char != data.character) {\n                            correctanswer = false;\n                        }\n                    }\n                }\n            });\n\n            self.answers[self.game.pointer] = {\n                answer: transcript,\n                correct: correctanswer,\n            }\n\n            callback(correctanswer);\n        },\n\n        end: function() {\n            var self = this;\n            $(\".minispeak_nextbutton\").prop(\"disabled\", true);\n            setTimeout(function() {\n                $(\".minispeak_nextbutton\").prop(\"disabled\", false);\n                self.next_question(true);\n            }, 2000);\n        },\n\n        start: function() {\n            var self = this;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_ctrl-btn\").prop(\"disabled\", true);\n\n            self.items.forEach(function(item) {\n                item.spoken = \"\";\n                item.answered = false;\n                item.correct = false;\n            });\n\n            self.game.pointer = 0;\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").show();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_start_btn\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_mainmenu\").hide();\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_controls\").show();\n\n            self.nextPrompt();\n\n        },\n\n        nextPrompt: function() {\n\n            var self = this;\n\n            $(\".tgapfill_ctrl-btn\").prop(\"disabled\", false);\n\n            var color;\n\n            var progress = self.items.map(function(item, idx) {\n                color = \"gray\";\n                if (self.items[idx].answered && self.items[idx].correct) {\n                    color = \"green\";\n                } else if (self.items[idx].answered && !self.items[idx].correct) {\n                    color = \"red\";\n                }\n                return \"<i style='color:\" + color + \"' class='fa fa-circle'></i>\";\n            }).join(\" \");\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_title\").html(progress);\n\n            self.nextReply();\n        },\n\n        nextReply: function() {\n            var self = this;\n            var code = \"<div class='tgapfill_reply tgapfill_reply_\" + self.game.pointer + \" text-center' style='display:none;'>\";\n\n            code += \"<div class='form-container'>\";\n            self.items[self.game.pointer].parsedstring.forEach(function(data, index) {\n                if (data.type === 'input') {\n                    code += \"<input class='single-character' autocomplete='off' type='text' name='filltext\" + index + \"' maxlength='1' data-index='\" + index + \"'>\";\n                } else if (data.type === 'mtext') {\n                    code += \"<input class='single-character-mtext' type='text' name='readonly\" + index + \"' maxlength='1' value='\" + data.character + \"' readonly>\";\n                } else {\n                    code += data.character;\n                }\n            });\n            code += \" <i data-idx='\" + self.game.pointer + \"' class='tgapfill_feedback'></i></div>\";\n\n            code += \"<div class='definition-container'>\";\n            code += \"<div class='definition'>\" + self.items[self.game.pointer].definition + \"</div>\";\n            code += \"</div>\";\n\n            code += \"</div>\";\n            $(\"#\" + self.itemdata.uniqueid + \"_container .question\").append(code);\n\n            var newreply = $(\".tgapfill_reply_\" + self.game.pointer);\n\n            anim.do_animate(newreply, 'zoomIn animate__faster', 'in').then(\n                function() {\n                }\n            );\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_ctrl-btn\").prop(\"disabled\", false);\n\n            var inputElements = [...document.querySelectorAll(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer + ' input.single-character')];\n            self.formReady(inputElements);\n\n            $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_reply_\" + self.game.pointer + ' input.single-character:first').focus();\n\n            if (self.itemdata.timelimit > 0) {\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container\").show();\n                $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container i\").show();\n                var progresbar = $(\"#\" + self.itemdata.uniqueid + \"_container .progress-container #progresstimer\").progressTimer({\n                    height: '5px',\n                    timeLimit: self.itemdata.timelimit,\n                    onFinish: function() {\n                        log.debug('timer finished');\n                        var btn = $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_check_btn\");\n                        log.debug(btn);\n\n                        $(\"#\" + self.itemdata.uniqueid + \"_container .tgapfill_check_btn\").trigger('click');\n                    }\n                });\n\n                progresbar.each(function() {\n                    self.items[self.game.pointer].timer.push($(this).attr('timer'));\n                });\n            }\n        },\n\n        stopTimer: function(timers) {\n            if (timers.length) {\n                timers.forEach(function(timer) {\n                    clearInterval(timer);\n                });\n            }\n        },\n\n        formReady: function(inputElements) {\n            inputElements.forEach(function(ele, index) {\n                ele.addEventListener(\"keydown\", function(e) {\n                    // If the keycode is backspace & the current field is empty\n                    // focus the input before the current. Then the event happens\n                    // which will clear the \"before\" input box.\n                    if (e.keyCode === 8 && e.target.value === \"\") {\n                     inputElements[Math.max(0, index - 1)].focus();\n                    }\n                });\n                ele.addEventListener(\"input\", function(e) {\n                    // Take the first character of the input\n                    // this actually breaks if you input an emoji like 👨‍👩‍👧‍👦....\n                    // but I'm willing to overlook insane security code practices.\n                    const [first, ...rest] = e.target.value;\n                    e.target.value = first ?? \"\"; // First will be undefined when backspace was entered, so set the input to \"\"\n                    const lastInputBox = index === inputElements.length - 1;\n                    const didInsertContent = first !== undefined;\n                    if (didInsertContent && !lastInputBox) {\n                        // Continue to input the rest of the string\n                        inputElements[index + 1].focus();\n                        inputElements[index + 1].value = rest.join(\"\");\n                        inputElements[index + 1].dispatchEvent(new Event(\"input\"));\n                    }\n                });\n            });\n        },\n    };\n});"],"names":["define","$","log","ajax","def","anim","progresstimer","debug","answers","clone","extend","this","init","index","itemdata","quizhelper","animopts","useanimatecss","register_events","getItems","appReady","next_question","showSummary","stepdata","hasgrade","totalitems","items","length","correctitems","filter","e","correct","grade","Math","round","do_next","self","uniqueid","on","start","prop","stopTimer","game","pointer","timer","setTimeout","hide","answered","nextPrompt","end","check_answer","which","passage","parsedstring","characterunputs","transcript","each","data","value","val","push","getComparison","comparison","gotComparison","text_items","sentences","map","target","sentence","prompt","definition","typed","audio","show","timelimit_progressbar","addClass","allowretry","hasClass","thereply","do_animate","then","callback","correctanswer","forEach","char","type","character","answer","item","spoken","color","progress","idx","join","html","nextReply","code","append","newreply","inputElements","document","querySelectorAll","formReady","focus","timelimit","progressTimer","height","timeLimit","onFinish","btn","trigger","attr","timers","clearInterval","ele","addEventListener","keyCode","max","first","rest","lastInputBox","undefined","dispatchEvent","Event"],"mappings":"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"}